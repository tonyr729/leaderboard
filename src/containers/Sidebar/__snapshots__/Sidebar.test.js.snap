// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Sidebar should match the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Sidebar />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <img
          alt="title logo"
          className="sidebar__title-logo"
          src="Leaderboard-Type-Logo-FLAT.svg"
/>,
        <section
          className="main"
>
          <h3>
                    Main
          </h3>
          <button>
                    Events
          </button>
          <button>
                    Riders
          </button>
          <button>
                    Media
          </button>
</section>,
        <NavLink
          activeClassName="selected"
          aria-current="page"
          className="nav"
          exact={true}
          to="/Admin"
>
          <button>
                    Admin Login
          </button>
</NavLink>,
      ],
      "className": "sidebar",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "alt": "title logo",
          "className": "sidebar__title-logo",
          "src": "Leaderboard-Type-Logo-FLAT.svg",
        },
        "ref": null,
        "rendered": null,
        "type": "img",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h3>
              Main
</h3>,
            <button>
              Events
</button>,
            <button>
              Riders
</button>,
            <button>
              Media
</button>,
          ],
          "className": "main",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Main",
            },
            "ref": null,
            "rendered": "Main",
            "type": "h3",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Events",
            },
            "ref": null,
            "rendered": "Events",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Riders",
            },
            "ref": null,
            "rendered": "Riders",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Media",
            },
            "ref": null,
            "rendered": "Media",
            "type": "button",
          },
        ],
        "type": "section",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "activeClassName": "selected",
          "aria-current": "page",
          "children": <button>
            Admin Login
</button>,
          "className": "nav",
          "exact": true,
          "to": "/Admin",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Admin Login",
          },
          "ref": null,
          "rendered": "Admin Login",
          "type": "button",
        },
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <img
            alt="title logo"
            className="sidebar__title-logo"
            src="Leaderboard-Type-Logo-FLAT.svg"
/>,
          <section
            className="main"
>
            <h3>
                        Main
            </h3>
            <button>
                        Events
            </button>
            <button>
                        Riders
            </button>
            <button>
                        Media
            </button>
</section>,
          <NavLink
            activeClassName="selected"
            aria-current="page"
            className="nav"
            exact={true}
            to="/Admin"
>
            <button>
                        Admin Login
            </button>
</NavLink>,
        ],
        "className": "sidebar",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "title logo",
            "className": "sidebar__title-logo",
            "src": "Leaderboard-Type-Logo-FLAT.svg",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h3>
                Main
</h3>,
              <button>
                Events
</button>,
              <button>
                Riders
</button>,
              <button>
                Media
</button>,
            ],
            "className": "main",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Main",
              },
              "ref": null,
              "rendered": "Main",
              "type": "h3",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Events",
              },
              "ref": null,
              "rendered": "Events",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Riders",
              },
              "ref": null,
              "rendered": "Riders",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Media",
              },
              "ref": null,
              "rendered": "Media",
              "type": "button",
            },
          ],
          "type": "section",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "activeClassName": "selected",
            "aria-current": "page",
            "children": <button>
              Admin Login
</button>,
            "className": "nav",
            "exact": true,
            "to": "/Admin",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Admin Login",
            },
            "ref": null,
            "rendered": "Admin Login",
            "type": "button",
          },
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
