// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Sidebar should match the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Sidebar />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="sidebar"
>
          <SidebarFull />
</div>,
        <div
          className="sidebar__collapse-btn"
>
          <i
                    className="icon-left-dir"
                    onClick={[Function]}
          />
</div>,
      ],
      "className": "sidebar-container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <SidebarFull />,
          "className": "sidebar",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <i
            className="icon-left-dir"
            onClick={[Function]}
/>,
          "className": "sidebar__collapse-btn",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "icon-left-dir",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": "i",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="sidebar"
>
            <SidebarFull />
</div>,
          <div
            className="sidebar__collapse-btn"
>
            <i
                        className="icon-left-dir"
                        onClick={[Function]}
            />
</div>,
        ],
        "className": "sidebar-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <SidebarFull />,
            "className": "sidebar",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <i
              className="icon-left-dir"
              onClick={[Function]}
/>,
            "className": "sidebar__collapse-btn",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "icon-left-dir",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": "i",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
